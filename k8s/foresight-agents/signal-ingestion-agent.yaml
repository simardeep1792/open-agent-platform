apiVersion: apps/v1
kind: Deployment
metadata:
  name: signal-ingestion-agent
  namespace: foresight-agents
  labels:
    app.kubernetes.io/name: signal-ingestion-agent
    app.kubernetes.io/component: data-ingestion
    app.kubernetes.io/part-of: foresight-platform
    foresight.ca/agent-type: ingestion
    foresight.ca/pipeline-stage: m1-extract
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: signal-ingestion-agent
  template:
    metadata:
      labels:
        app.kubernetes.io/name: signal-ingestion-agent
        app.kubernetes.io/component: data-ingestion
        foresight.ca/agent-type: ingestion
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: signal-ingestion
        image: ghcr.io/simardeep1792/foresight-ingestion-agent:latest
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 8090
          name: a2a-protocol
          protocol: TCP
        env:
        - name: AGENT_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: AGENT_TYPE
          value: "foresight-ingestion-agent"
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: REGISTRY_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: foresight-config
              key: registry_endpoint
        - name: JSON_SOURCE_PATH
          valueFrom:
            configMapKeyRef:
              name: foresight-config
              key: json_source_path
        - name: OUTPUT_PATH
          valueFrom:
            configMapKeyRef:
              name: foresight-config
              key: output_path
        - name: BATCH_SIZE
          valueFrom:
            configMapKeyRef:
              name: foresight-config
              key: batch_size
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: foresight-config
              key: log_level
        - name: API_KEY
          valueFrom:
            secretKeyRef:
              name: foresight-secrets
              key: api_key
        resources:
          requests:
            cpu: 200m
            memory: 256Mi
          limits:
            cpu: 1000m
            memory: 1Gi
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: config
          mountPath: /app/config
          readOnly: true
        - name: data-sources
          mountPath: /data/sources
        - name: processed-data
          mountPath: /data/processed
      volumes:
      - name: config
        configMap:
          name: foresight-config
      - name: data-sources
        persistentVolumeClaim:
          claimName: foresight-data-sources
      - name: processed-data
        persistentVolumeClaim:
          claimName: foresight-processed-data
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      restartPolicy: Always
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: foresight-data-sources
  namespace: foresight-agents
  labels:
    app.kubernetes.io/name: signal-ingestion-agent
    app.kubernetes.io/component: storage
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 50Gi
  storageClassName: standard
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: foresight-processed-data
  namespace: foresight-agents
  labels:
    app.kubernetes.io/name: foresight-platform
    app.kubernetes.io/component: storage
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 100Gi
  storageClassName: standard
---
apiVersion: v1
kind: Service
metadata:
  name: signal-ingestion-agent
  namespace: foresight-agents
  labels:
    app.kubernetes.io/name: signal-ingestion-agent
    app.kubernetes.io/component: data-ingestion
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 80
    targetPort: 8080
    protocol: TCP
  - name: a2a-protocol
    port: 8090
    targetPort: 8090
    protocol: TCP
  selector:
    app.kubernetes.io/name: signal-ingestion-agent
---
apiVersion: openagent.dev/v1
kind: Agent
metadata:
  name: signal-ingestion-agent
  namespace: foresight-agents
  labels:
    app.kubernetes.io/name: signal-ingestion-agent
    app.kubernetes.io/component: data-ingestion
spec:
  type: foresight-ingestion-agent
  version: "1.0.0"
  capabilities:
    - name: "foresight.ingest-json-sources"
      description: "Process JSON document sources by date range (replaces extract-news-articles.py)"
      input_schema:
        type: object
        properties:
          input_path:
            type: string
            description: "Path to JSON source files"
          output_file:
            type: string
            description: "Output file for processed documents"
          start_date:
            type: string
            format: date
          end_date:
            type: string
            format: date
          batch_size:
            type: integer
            minimum: 1
            maximum: 1000
            default: 50
    - name: "foresight.retrieve-documents"
      description: "Extract document metadata with filtering"
      input_schema:
        type: object
        properties:
          source_files:
            type: array
            items:
              type: string
          date_filter:
            type: object
            properties:
              start_date:
                type: string
                format: date-time
              end_date:
                type: string
                format: date-time
    - name: "foresight.retrieve-bodies"
      description: "Extract document content in multiple languages"
      input_schema:
        type: object
        properties:
          documents:
            type: array
            items:
              type: object
          languages:
            type: array
            items:
              type: string
              enum: ["en", "fr", "es"]
    - name: "foresight.retrieve-scores"
      description: "Add scoring information to documents"
      input_schema:
        type: object
        properties:
          documents:
            type: array
            items:
              type: object
          scoring_method:
            type: string
            enum: ["relevance", "quality", "timeliness"]
  communication:
    protocol: "json-rpc-2.0"
    transport: "http"
    endpoints:
      - name: "primary"
        url: "http://signal-ingestion-agent.foresight-agents.svc.cluster.local:8090"
  resources:
    cpu: "200m"
    memory: "256Mi"
  scaling:
    min_replicas: 1
    max_replicas: 5
    target_cpu_utilization: 70
  health:
    liveness_probe:
      path: "/health"
      port: 8080
    readiness_probe:
      path: "/ready"
      port: 8080